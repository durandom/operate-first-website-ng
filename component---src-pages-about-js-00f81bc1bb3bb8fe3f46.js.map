{"version":3,"file":"component---src-pages-about-js-00f81bc1bb3bb8fe3f46.js","mappings":"yLAMaA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACI,4BACI,gBAAC,IAAD,MACKA,EACL,gBAAC,IAAD,S,6HCNL,SAASC,IACZ,OACI,gBAACC,EAAA,EAAD,CAAWC,GAAI,KACX,gBAACC,EAAA,EAAD,CAAOC,MAAO,EAAGC,GAAG,MAApB,eACA,gBAACC,EAAA,EAAD,CAAMJ,GAAG,MACP,gIAGF,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,8HAIA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,kNAMA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,mFAEoB,oEAFpB,QAGK,4CAHL,KAG6B,qCAH7B,MAKA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,yKAG8C,qBAAGK,KAAK,uEAAR,uBAH9C,KAMA,gBAACD,EAAA,EAAD,CAAMJ,GAAG,MAAT,0BACyB,6DADzB,KAGA,gBAACI,EAAA,EAAD,KACE,yCAEF,gBAACA,EAAA,EAAD,CAAME,GAAG,MACP,sFAEF,2BACA,gBAACL,EAAA,EAAD,CAAOC,MAAO,EAAGC,GAAG,KAAKG,GAAG,MAA5B,+BACA,gBAACF,EAAA,EAAD,CAAMJ,GAAG,MACP,0CADF,yNAMA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,aACY,mDADZ,sVASA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,oCACmC,4DADnC,mJAMA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,wNAMA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,QACO,4DADP,gLAMA,gBAACI,EAAA,EAAD,CAAMJ,GAAG,MAAT,0SAOA,2BACA,gBAACC,EAAA,EAAD,CAAOC,MAAO,EAAGC,GAAG,MAApB,mBACA,gBAACC,EAAA,EAAD,CAAME,GAAG,MACP,qBAAGD,KAAK,oBAAmB,2DAE7B,gBAACD,EAAA,EAAD,oDAC8C,qBAAGC,KAAK,+DAA+DE,OAAO,SAASC,IAAI,cAA3F,kCAE9C,gBAACJ,EAAA,EAAD,CAAMK,GAAI,IACR,gBAAC,EAAAC,KAAD,CAAMC,GAAG,kBAAT,kCAEF,gBAACP,EAAA,EAAD,CAAMK,GAAI,IAAV,oFAGA,gBAACL,EAAA,EAAD,CAAMK,GAAI,IAAV,gFAGA,gBAACL,EAAA,EAAD,CAAMK,GAAI,IAAV,uE,eCrFZ,EAXkB,WAEhB,OACE,4BACE,gBAACb,EAAA,EAAD,KACE,gBAACE,EAAD","sources":["webpack://operate-first/./src/components/Layout.js","webpack://operate-first/./src/components/nav-tabs/AboutPage.js","webpack://operate-first/./src/pages/about.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Nav } from \"../components/homepage/Navbar\";\nimport { Footer } from \"../components/homepage/Footer\";\n\nexport const Layout = ({ children }) => {\n    return (\n        <main>\n            <Nav />\n                {children}\n            <Footer />\n        </main>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node,\n}\n","import { Container, Text, Title } from '@mantine/core';\nimport React from 'react';\nimport { Link } from \"gatsby\"\n\n\nexport function AboutContent() {\n    return (\n        <Container pb={205}>\n            <Title order={2} my=\"md\">Our Purpose</Title>\n            <Text pb=\"sm\">\n              <b>Why build an all-Open Source community cloud? How does it help\n              learn stuff and make things better?</b>\n            </Text>\n            <Text pb=\"sm\">\n              Open Source software is widely available, but it faces an\n              operations-barrier when bringing it to a production environment.\n            </Text>\n            <Text pb=\"sm\">\n              Proprietary services have attempted to address this barrier, but\n              they undermine the Open Source development model because lessons\n              learned from operating the code are invisible to the Open Source\n              developers.\n            </Text>\n            <Text pb=\"sm\">\n              To overcome this operations barrier in an Open Source way, we\n              must switch to an <b>Open Source-like approach to operations</b>,\n              or <i>Open Operations</i> (<i>Open Ops</i>).\n            </Text>\n            <Text pb=\"sm\">\n              Open Operations means developers and operators collaborating\n              Openly to apply a product&apos;s operational considerations right\n              back into the code itself. The result is an <a href=\"https://www.operate-first.cloud/community/open-source-services.html\">\n              Open Source service</a>.\n            </Text>\n            <Text pb=\"sm\">\n              Think of it like this: <b>After CI + CD is community cloud</b>.\n            </Text>\n            <Text>\n              <i>The result?</i>\n            </Text>\n            <Text py=\"sm\">\n              <b>Better code + better performance = better final product.</b>\n            </Text>\n            <hr/>\n            <Title order={4} my=\"md\" py=\"sm\">How are we doing this work?</Title>\n            <Text pb=\"sm\">\n              <b>Operate First</b> is a community of developers, operators,\n              and others — site reliability engineers (SRE), data scientists,\n              Open Source practitioners, and so forth — who believe in promoting\n              this Open Source approach to operations.\n            </Text>\n            <Text pb=\"sm\">\n              We invite <b>Open Source developers</b> to bring their\n              projects during development to a production cloud, which is hosted\n              and maintained by Operate First contributors. There in the\n              community cloud, developers interact directly with their cloud\n              provider&apos;s operations (people and tools) and gain valuable\n              feedback on operational considerations for their code and other\n              artifacts.\n            </Text>\n            <Text pb=\"sm\">\n              In this same community cloud the <b>SRE community of practice\n              (CoP)</b> creates, learns, teaches, and documents what it takes to\n              build and run an all-Open Source cloud as a learning-while-in-production\n              environment.\n            </Text>\n            <Text pb=\"sm\">\n              Rather than holding a pager to a customer SLA, our community cloud\n              is self-supported between overall operators and app teams\n              (Open Source developers) who maintain the cloud to a mutually\n              agreed expectation level.\n            </Text>\n            <Text pb=\"sm\">\n              This <b>service level expectation (SLE)</b> is\n              tuned to the community itself, so an app team wanting a higher\n              uptime service level objective (SLO) might respond by supporting\n              their app to a higher expectation level.\n            </Text>\n            <Text pb=\"sm\">\n              Thus developers and operators work together to create a community\n              cloud that matches the needs and expectations of our community.\n              Then scaling the community cloud is a technical effort that\n              intersects with the community expectations as a substitute for the\n              common product-customer relationship.\n            </Text>\n            <hr />\n            <Title order={4} my=\"md\">Where to start:</Title>\n            <Text py=\"md\">\n              <a href=\"/getting-started\"><b>Jump to Getting Started page</b></a>\n            </Text>\n            <Text>\n              Continue learning more about Operate First: <a href=\"https://www.operate-first.cloud/training/operate_first_intro\" target=\"_blank\" rel=\"noreferrer\">Introduction to Operate First</a>\n            </Text>\n            <Text pt={10}>\n              <Link to=\"/our-community\">Get involved in our community</Link>\n            </Text>\n            <Text pt={10}>\n              Start using Operate First cloud resources as an app developer (link coming soon)\n            </Text>\n            <Text pt={10}>\n              Start contributing to Operate First as an operator or SRE (link coming soon)\n            </Text>\n            <Text pt={10}>\n              See how data scientists are using Operate First (link coming soon)\n            </Text>\n        </Container>\n    )\n}\n","import * as React from \"react\";\nimport '../pages/style.css';\n// Component imports\nimport { AboutContent } from \"../components/nav-tabs/AboutPage\";\nimport { Layout } from \"../components/Layout\";\n\nconst AboutPage = () => {\n\n  return (\n    <main>\n      <Layout>\n        <AboutContent />\n      </Layout>\n    </main>\n  )\n}\n\nexport default AboutPage;\n"],"names":["Layout","children","AboutContent","Container","pb","Title","order","my","Text","href","py","target","rel","pt","Link","to"],"sourceRoot":""}